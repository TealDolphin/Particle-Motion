Fields(R,E0,B0,pos,vel,q,a,b,c,d,t,dt):
    e0 = 8.854*10**(-12)# Epsilon naught in [N][m]^2[C]^-2
    u0 = 4*pi*10**(-7)# Vaccum Magnetic permitivity constant in [N][s]^2[C]^-2
    
    for i in range(3):
        for j in range(4):
            
            # Declaring the x,y,z values per particle to allow the eval() statements to use them.
            x = pos[j,0]
            y = pos[j,1]
            z = pos[j,2]
            
            # Total Electric field as calculated by the external electric field and the position of the other charges.
            """
            E = evaluate(external field at the particle j) + 1/4pi*e0 * each particle: q*Rvector/Rmag**3 
            """
            E[j,i] = eval(E0[i]) + (1/(4*pi*e0))*(q[j-1]*(pos[i,j] - pos[i,j-1])/(R[j,0]**3))
                + q[j-2]*(pos[i,j] - pos[i,j-2])/(R[j,1]**3))
                + q[j-3]*(pos[i,j] - pos[i,j-3])/(R[j,2]**3))
            
            # Total Magnetic field in a Cartesian direction.
            """
            B = evaluate(external field at the particle j) + u0/4pi * each particle: =\/
            Each moving particle generates an electric field, x case is shown below. Remember that there are three particles that need to be considered.
            [for x case each term affected by the constants is (Vel in y)*(z offset) - (Vel in z)*(y offset)]
            """
            B[j,i] = eval(B0[i]) + (u0/(4*pi))*((q[j-1]*(vel[i-2,j-1]*(pos[i-1,j]-pos[i-1,j-1]) - vel[i-1,j-1]*(pos[i-2,j]-pos[i-1,j-1]))/(R[j,0]**3)) 
                + (q[j-2]*(vel[i-2,j-2]*(pos[i-1,j]-pos[i-1,j-2]) - vel[i-1,j-2]*(pos[i-2,j]-pos[i-1,j-2]))/(R[j,1]**3))
                + (q[j-3]*(vel[i-2,j-3]*(pos[i-1,j]-pos[i-1,j-3]) - vel[i-1,j-3]*(pos[i-2,j]-pos[i-1,j-3]))/(R[j,2]**3)))
    
    return E,B
